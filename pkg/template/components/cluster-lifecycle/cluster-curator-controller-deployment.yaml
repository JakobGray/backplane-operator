
# Copyright Contributors to the Open Cluster Management project.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-curator-controller
spec:
  replicas: {{ .ReplicaCount }}
  selector:
    matchLabels:
      name: cluster-curator-controller
  template:
    metadata:
      labels:
        name: cluster-curator-controller
        ocm-antiaffinity-selector: "cluster-curator-controller"
    spec:
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.pullSecret }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-curator-controller
          - weight: 35
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-curator-controller
      serviceAccountName: cluster-curator
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
          - "./manager"
          - "-enable-leader-election"
        image: "{{index .Images cluster_curator_controller }}"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: IMAGE_URI
          value: "{{index .Images cluster_curator_controller }}"
{{- if .ProxyConfigs }}
        - name: HTTP_PROXY
          value: {{index .ProxyConfigs "HTTP_PROXY" }}
        - name: HTTPS_PROXY
          value: {{index .ProxyConfigs "HTTPS_PROXY" }}
        - name: NO_PROXY
          value: {{index .ProxyConfigs "NO_PROXY" }}
{{- end }}
        imagePullPolicy: "{{ .Values.global.pullPolicy }}"
        name: cluster-curator-controller
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        resources:
          limits:
            cpu: "10m"
            memory: "128Mi"
          requests:
            cpu: "3m"        # Runs < 2m most of the time
            memory: "25Mi"   # Runs between 25-28Mi
{{- if .NodeSelector }}
      nodeSelector:
{{- range $key, $value := .NodeSelector }}
        {{$key}}: "{{$value}}"
      {{- end }}
{{- end }}
{{- with .Tolerations }}
      tolerations:
      {{- range . }}
      - {{ if .Key }} key: {{ .Key }} {{- end }}
        {{ if .Operator }} operator: {{ .Operator }} {{- end }}
        {{ if .Value }} value: {{ .Value }} {{- end }}
        {{ if .Effect }} effect: {{ .Effect }} {{- end }}
        {{ if .TolerationSeconds }} tolerationSeconds: {{ .TolerationSeconds }} {{- end }}
      {{- end }}
{{- end }}